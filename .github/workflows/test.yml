name: Test

permissions:
  contents: read

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/**'

env:
  DB_HOST: localhost
  DB_PORT: 5432
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_NAME: "expenses_db_${{ github.run_id }}"
  DB_SEED_DIR: ./internal/database/seed/test
  DB_SSL_MODE: disable
  ENV: test
  DB_SCHEMA: test
  SERVER_PORT: 8080
  JWT_SECRET: "test-secret"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true
      
      - name: Create schema for tests
        run: |
            PGPASSWORD=${{ env.DB_PASSWORD }} psql -U postgres -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -d ${{ env.DB_NAME }} -tc "CREATE SCHEMA IF NOT EXISTS ${{ env.DB_SCHEMA }};"

      - name: Install Just
        uses: extractions/setup-just@v3

      - name: Detect GOBIN
        id: gobin
        shell: bash
        run: |
          DIR="$(go env GOBIN)"
          # go falls back to GOPATH/bin when GOBIN is unset, but DIR is still blank
          if [ -z "$DIR" ]; then
            DIR="$(go env GOPATH)/bin"
          fi
          echo "dir=$DIR" >>"$GITHUB_OUTPUT"
      
    
      - name: Cache Go tool binaries
        id: tool-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.gobin.outputs.dir }}
          key: ${{ runner.os }}-go-tools-${{ hashFiles('justfile') }}-${{ hashFiles('**/go.sum') }}
    
      - name: Install CLIs
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: just install

      - name: Run migrations
        run: just db-upgrade

      - name: Run seed
        run: just db-seed

      - name: Run tests
        run: ginkgo -r -race -cover -coverpkg=./... -coverprofile=coverage.txt -covermode=atomic ./...  

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          fail_ci_if_error: true
